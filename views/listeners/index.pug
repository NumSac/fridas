extends ../layouts/main.pug

block content
    .container.mt-4
        .row
            // Listener List Column
            .col-md-8.mb-4
                .card
                    .card-header.d-flex.justify-content-between.align-items-center
                        h4.mb-0 Active Listeners
                        a.btn.btn-sm.btn-outline-primary(href="#")
                            i.bi.bi-arrow-clockwise Refresh

                    .card-body
                        if listeners.length > 0
                            .list-group
                              each listener in listeners
                                  .list-group-item.d-flex.justify-content-between.align-items-start
                                      .d-flex.w-100
                                          .flex-grow-1.me-3
                                              a.text-decoration-none(href=`/listeners/${listener.id}`)
                                                  h5.mb-1= listener.name
                                                  small.text-muted
                                                      | #{listener.protocol.toUpperCase()} : #{listener.port}
                                              if listener.options
                                                  pre.small.mt-2.mb-0= JSON.stringify(listener.options, null, 2)

                                          .d-flex.flex-column.align-items-end
                                              span.badge(class=listener.status === ListenerStatus.ACTIVE ? 'bg-success' : listener.status === ListenerStatus.ERROR ? 'bg-danger' : 'bg-secondary')
                                                  | #{listener.status}
                                              button.btn.btn-danger.btn-sm.mt-2(
                                                  type='button'
                                                  onclick=`deleteListener('${listener.id}', '${listener.name}')`
                                              )
                                                  i.bi.bi-trash
                        else
                            .alert.alert-info.mb-0 No active listeners configured

            // Create Listener Form Column
            .col-md-4
                .card.sticky-top(style="top: 1rem")
                    .card-header
                        h5.mb-0 Create New Listener
                    .card-body
                        form(method='POST' action='/listeners' id="createListenerForm")
                            // Form fields remain the same as before
                            .mb-3
                                label.form-label(for='name') Listener Name
                                input#name.form-control(
                                    type='text'
                                    name='name'
                                    required
                                    placeholder='My HTTPS Listener'
                                )

                            .mb-3
                                label.form-label(for='protocol') Protocol
                                select#protocol.form-select(name='protocol' required)
                                  each protocol in Object.values(Protocol)
                                      option(
                                          value=protocol
                                          selected=(protocol === Protocol.HTTP ? 'selected' : false)
                                      )= protocol.toUpperCase()

                            .mb-3
                                label.form-label(for='port') Port
                                input#port.form-control(
                                    type='number'
                                    name='port'
                                    min='1'
                                    max='65535'
                                    required
                                    placeholder='443'
                                )

                            .mb-3.form-check
                                input#isActive.form-check-input(
                                    type='checkbox'
                                    name='isActive'
                                    checked
                                )
                                label.form-check-label(for='isActive') Activate Immediately

                            .card.mb-3
                                .card-header SSL Configuration
                                .card-body
                                    .mb-3.form-check
                                        input#enableSSL.form-check-input(
                                            type='checkbox'
                                            name='options[ssl][enabled]'
                                        )
                                        label.form-check-label(for='enableSSL') Enable SSL

                                    #sslOptions(style='display: none')
                                        .mb-3
                                            label.form-label(for='sslKeyPath') Private Key Path
                                            input#sslKeyPath.form-control(
                                                type='text'
                                                name='options[ssl][keyPath]'
                                                placeholder='/path/to/private.key'
                                            )

                                        .mb-3
                                            label.form-label(for='sslCertPath') Certificate Path
                                            input#sslCertPath.form-control(
                                                type='text'
                                                name='options[ssl][certPath]'
                                                placeholder='/path/to/certificate.crt'
                                            )

                                        .mb-3
                                            label.form-label(for='sslCaPath') CA Bundle Path (Optional)
                                            input#sslCaPath.form-control(
                                                type='text'
                                                name='options[ssl][caPath]'
                                                placeholder='/path/to/ca_bundle.crt'
                                            )

                                        .mb-3
                                            label.form-label(for='sslPassphrase') Passphrase (Optional)
                                            input#sslPassphrase.form-control(
                                                type='password'
                                                name='options[ssl][passphrase]'
                                                placeholder='••••••••'
                                            )

                            .card.mb-3
                                .card-header Advanced Options
                                .card-body
                                    .mb-3.form-check
                                        input#authRequired.form-check-input(
                                            type='checkbox'
                                            name='options[authenticationRequired]'
                                        )
                                        label.form-check-label(for='authRequired') Require Authentication

                                    .mb-3
                                        label.form-label(for='maxConnections') Maximum Connections
                                        input#maxConnections.form-control(
                                            type='number'
                                            name='options[maxConnections]'
                                            min='1'
                                            placeholder='Unlimited'
                                        )

                                    .mb-3
                                        label.form-label(for='whitelistIps') IP Whitelist
                                        textarea#whitelistIps.form-control(
                                            name='options[whitelistIps]'
                                            placeholder='Enter one IP/CIDR per line'
                                            rows='3'
                                        )

                            .d-grid
                                button.btn.btn-primary(type='submit')
                                    i.bi.bi-plus-circle.me-2
                                    | Create Listener

block append scripts
    script(src="public/js/listener-page-script.js")